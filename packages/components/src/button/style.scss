.components-button {
	@include reduce-motion("transition");
	height: $icon-button-size;
	color: $dark-gray-500;
	border-radius: 3;


	&:not(:disabled):not([aria-disabled="true"]):not(.is-secondary):not(.is-primary):not(.is-tertiary):not(.is-link):hover {
		@include button-style__hover;
	}

	// Default button style
	&.is-secondary {
		border-width: $border-width;
		color: color(theme(button) shade(6%));
		border-color: color(theme(button) shade(6%));

		&:not(:disabled):not([aria-disabled="true"]):hover {
			border-color: color(theme(button) shade(25%));
			color: color(theme(button) shade(25%));
		}

		&:focus:enabled {
			color: color(theme(button) shade(25%));
			border-color: color(theme(button) shade(5%));
			box-shadow: 0 0 0 $border-width color(theme(button) shade(5%));
		}

		&:active:enabled {
			color: color(theme(button) shade(5%));
		}

		&:disabled,
		&[aria-disabled="true"] {
			text-shadow: 0 $border-width 0 #fff;
		}
	}

	&.is-primary {
		border-width: $border-width;
		background: color(theme(button));
		border-color: color(theme(button));
		color: $white;

		&:not(:disabled):not([aria-disabled="true"]):hover,
		&:focus:enabled {
			background: color(theme(button) shade(10%));
			border-color: color(theme(button) shade(10%));
			color: $white;
		}

		&:focus:enabled {
			box-shadow:
				0 0 0 $border-width $white,
				0 0 0 3px color(theme(button));
		}

		&:active:enabled {
			background: color(theme(button) shade(20%));
			border-color: color(theme(button) shade(20%));
			color: $white;
		}

		&:disabled,
		&:disabled:active:enabled,
		&[aria-disabled="true"],
		&[aria-disabled="true"]:enabled, // This catches a situation where a Button is aria-disabled, but not disabled.
		&[aria-disabled="true"]:active:enabled {
			color: color(theme(button) tint(40%));
			background: color(theme(button) tint(10%));
			border-color: color(theme(button) tint(10%));

			&:focus:enabled {
				box-shadow:
					0 0 0 $border-width $white,
					0 0 0 3px color(theme(button));
			}
		}

		&.is-busy,
		&.is-busy:disabled,
		&.is-busy[aria-disabled="true"] {
			color: $white;
			background-size: 100px 100%;
			// Disable reason: This function call looks nicer when each argument is on its own line.
			/* stylelint-disable */
			background-image: linear-gradient(
				-45deg,
				theme(button) 28%,
				color(theme(button) shade(20%)) 28%,
				color(theme(button) shade(20%)) 72%,
				theme(button) 72%
			);
			/* stylelint-enable */
			border-color: color(theme(button));
		}
	}

	/* Buttons that look like links, for a cross of good semantics with the visual */
	&.is-link {
		@include reduce-motion("transition");

		&:focus {
			box-shadow:
				0 0 0 $border-width #5b9dd9,
				0 0 2px $border-width rgba(30, 140, 190, 0.8);
		}
	}

	&.is-link.is-destructive {
		color: $alert-red;
	}

	&:focus:not(:disabled) {
		@include button-style__focus-active;
	}

	&.is-busy,
	&.is-secondary.is-busy,
	&.is-secondary.is-busy:disabled,
	&.is-secondary.is-busy[aria-disabled="true"] {
		animation: components-button__busy-animation 2500ms infinite linear;
		background-image: repeating-linear-gradient(-45deg, $light-gray-500, $white 11px, $white 10px, $light-gray-500 20px);
	}

	// Buttons that are text-based.
	&.is-tertiary {
		color: theme(outlines);

		&:not(:disabled):not([aria-disabled="true"]):hover {
			color: color(theme(outlines) shade(25%));
		}
	}
}

@keyframes components-button__busy-animation {
	0% {
		background-position: 200px 0;
	}
}
